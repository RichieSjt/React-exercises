{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/Quotes.js","components/layout/MainNav.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","QuoteItem","props","item","text","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAsc","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","Quotes","loadedQuotes","useEffect","length","MainNav","header","logo","nav","activeClassName","active","Layout","Fragment","main","children","NewQuote","React","lazy","QuoteDetail","NotFound","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b3744e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3XAEp\",\"logo\":\"MainNavigation_logo__3Y_IA\",\"nav\":\"MainNavigation_nav__1mu-S\",\"active\":\"MainNavigation_active__YND2p\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__IAfua\",\"sorting\":\"QuoteList_sorting__3g7e3\"};","import { useReducer, useCallback } from 'react'\n\nfunction httpReducer(state, action) {\n    if (action.type === 'SEND') {\n        return {\n            data: null,\n            error: null,\n            status: 'pending',\n        }\n    }\n\n    if (action.type === 'SUCCESS') {\n        return {\n            data: action.responseData,\n            error: null,\n            status: 'completed',\n        }\n    }\n\n    if (action.type === 'ERROR') {\n        return {\n            data: null,\n            error: action.errorMessage,\n            status: 'completed',\n        }\n    }\n\n    return state\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n    const [httpState, dispatch] = useReducer(httpReducer, {\n        status: startWithPending ? 'pending' : null,\n        data: null,\n        error: null,\n    })\n\n    const sendRequest = useCallback(\n        async function (requestData) {\n            dispatch({ type: 'SEND' })\n            try {\n                const responseData = await requestFunction(requestData)\n                dispatch({ type: 'SUCCESS', responseData })\n            } catch (error) {\n                dispatch({\n                    type: 'ERROR',\n                    errorMessage: error.message || 'Something went wrong!',\n                })\n            }\n        },\n        [requestFunction]\n    )\n\n    return {\n        sendRequest,\n        ...httpState,\n    }\n}\n\nexport default useHttp\n","const FIREBASE_DOMAIN = 'https://react-24348-default-rtdb.firebaseio.com'\n\nexport async function getAllQuotes() {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`)\n    const data = await response.json()\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not fetch quotes.')\n    }\n\n    const transformedQuotes = []\n\n    for (const key in data) {\n        const quoteObj = {\n            id: key,\n            ...data[key],\n        }\n\n        transformedQuotes.push(quoteObj)\n    }\n\n    return transformedQuotes\n}\n\nexport async function getSingleQuote(quoteId) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`)\n    const data = await response.json()\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not fetch quote.')\n    }\n\n    const loadedQuote = {\n        id: quoteId,\n        ...data,\n    }\n\n    return loadedQuote\n}\n\nexport async function addQuote(quoteData) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n        method: 'POST',\n        body: JSON.stringify(quoteData),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n    const data = await response.json()\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not create quote.')\n    }\n\n    return null\n}\n\nexport async function addComment(requestData) {\n    const response = await fetch(\n        `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n        {\n            method: 'POST',\n            body: JSON.stringify(requestData.commentData),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n    )\n    const data = await response.json()\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not add comment.')\n    }\n\n    return { commentId: data.name }\n}\n\nexport async function getAllComments(quoteId) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`)\n\n    const data = await response.json()\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not get comments.')\n    }\n\n    const transformedComments = []\n\n    for (const key in data) {\n        const commentObj = {\n            id: key,\n            ...data[key],\n        }\n\n        transformedComments.push(commentObj)\n    }\n\n    return transformedComments\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__tIDls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2mWxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1GYup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__19jsX\"};","import React from 'react'\nimport classes from './QuoteItem.module.css'\nimport { Link } from 'react-router-dom'\n\nconst QuoteItem = (props) => {\n    return (\n        <li className={classes.item}>\n            <figure>\n                <blockquote>\n                    <p>{props.text}</p>\n                </blockquote>\n                <figcaption>{props.author}</figcaption>\n            </figure>\n            <Link to={`/quotes/${props.id}`} className='btn'>\n                View Fullscreen\n            </Link>\n        </li>\n    )\n}\n\nexport default QuoteItem\n","import { Fragment } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport QuoteItem from './QuoteItem'\nimport classes from './QuoteList.module.css'\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) {\n            return quoteA.id > quoteB.id ? 1 : -1\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1\n        }\n    })\n}\n\nconst QuoteList = (props) => {\n    const history = useHistory()\n    const location = useLocation()\n\n    // Turns \"?sort=asc\" into { sort: asc } object\n    const queryParams = new URLSearchParams(location.search)\n\n    const isSortingAsc = queryParams.get('sort') === 'asc'\n\n    const sortedQuotes = sortQuotes(props.quotes, isSortingAsc)\n\n    const changeSortingHandler = () => {\n        // Push re-renders the component even if we are loading the same page we are currently on\n        // history.push(`${location.pathname}?sort=${isSortingAsc ? 'desc' : 'asc'}`)\n        history.push({\n            pathname: location.pathname,\n            search: `?sort=${isSortingAsc ? 'desc' : 'asc'}`\n        })\n    }\n\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={changeSortingHandler}>Sort {isSortingAsc ? 'Descending' : 'Ascending'}</button>\n            </div>\n            <ul className={classes.list}>\n                {sortedQuotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default QuoteList\n","import { Link } from 'react-router-dom'\nimport classes from './NoQuotesFound.module.css'\n\nconst NoQuotesFound = () => {\n    return (\n        <div className={classes.noquotes}>\n            <p>No quotes found!</p>\n            <Link to='/new-quote' className='btn'>Add a Quote</Link>\n        </div>\n    )\n}\n\nexport default NoQuotesFound\n","import React, { useEffect } from 'react'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getAllQuotes } from '../lib/api'\r\n\r\nimport QuoteList from '../components/quotes/QuoteList'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\n\r\nconst Quotes = () => {\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true)\r\n\r\n    useEffect(() => {\r\n        sendRequest()\r\n    }, [sendRequest])\r\n\r\n    if(status === 'pending') {\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(error) {\r\n        return <p className=\"centered focused\">{error}</p>\r\n    }\r\n\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />\r\n    }\r\n\r\n    return (\r\n        <QuoteList quotes={loadedQuotes} />\r\n    )\r\n}\r\n\r\nexport default Quotes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport classes from './MainNavigation.module.css'\r\n\r\nconst MainNav = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to='/quotes' activeClassName={classes.active}>\r\n                            All quotes\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/new-quote' activeClassName={classes.active}>\r\n                            Add a quote\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainNav\r\n","import React from 'react'\r\nimport classes from './Layout.module.css'\r\n\r\nimport MainNav from './MainNav'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <MainNav />\r\n            <main className={classes.main}>\r\n                {props.children}\r\n            </main>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import React, { Suspense } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport Quotes from './pages/Quotes'\nimport Layout from './components/layout/Layout'\nimport LoadingSpinner from './components/UI/LoadingSpinner'\n\nconst NewQuote = React.lazy(() => import('./pages/NewQuote'))\nconst QuoteDetail = React.lazy(() => import('./pages/QuoteDetail'))\nconst NotFound = React.lazy(() => import('./pages/NotFound'))\n\nconst App = () => {\n    return (\n        <Layout>\n            <Suspense fallback={\n                <div className='centered'>\n                    <LoadingSpinner />\n                </div>\n            }>\n                <Switch>\n                    <Route path='/' exact>\n                        <Redirect to='/quotes' />\n                    </Route>\n                    <Route path='/quotes' exact>\n                        <Quotes />\n                    </Route>\n                    <Route path='/quotes/:quoteId'>\n                        <QuoteDetail />\n                    </Route>\n                    <Route path='/new-quote'>\n                        <NewQuote />\n                    </Route>\n                    <Route path='*'>\n                        <NotFound />\n                    </Route>\n                </Switch>\n            </Suspense>\n        </Layout>\n    )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n)"],"sourceRoot":""}